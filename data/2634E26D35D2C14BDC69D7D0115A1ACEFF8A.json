{
    "uid": "2634E26D35D2C14BDC69D7D0115A1ACEFF8A",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_DomainContainer",
        "type": "game_script",
        "order": 2,
        "parentId": "D3325122KACDEA4515SB731E37A42B9D779F",
        "folder": false,
        "scriptType": 0,
        "content": "# ===================================================================\n#\n#   Script: Component_Container\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_DomainContainer extends gs.Component_Container\n    ###*\n    * A container component allows an object to have sub-objects.\n    * @module gs\n    * @class Component_DomainContainer\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: (disposeBehavior) ->\n        super(disposeBehavior)\n        \n        ###*\n        * The current domain. The default domain is an empty string. Please use\n        * <b>changeDomain</b> to change the current domain.\n        * @property domain\n        * @readOnly\n        ###\n        @domain = \"com.degica.vnm.default\"\n        @domains = [\"com.degica.vnm.default\"]\n        @prev_visibilities_ = {}\n     \n    ###*\n    * Changes the component and all sub-objects.\n    * @method changeDomain\n    * @param {string} domain - The domain to change to.\n    ###   \n    dispose: ->\n        super\n        \n        for domain in @domains\n            if domain != @domain\n                @object.subObjects = @object.subObjectsByDomain[domain]\n                @object.disposeObjects()\n        @object.subObjects = @object.subObjectsByDomain[@domain]\n        \n    ###*\n    * Changes the current domain.\n    * @method changeDomain\n    * @param {string} domain - The domain to change to.\n    ###   \n    changeDomain: (domain) ->\n        @domain = domain\n        objects = @object.subObjectsByDomain[domain]\n        if !objects\n            objects = @object.subObjectsByDomain[domain] = []\n            @domains = Object.keys(@object.subObjectsByDomain)\n            \n        @object.subObjects = objects\n    \n    ###*\n    * Sets the visibility of all sub objects of all domains.\n    * @method setVisible\n    * @param {boolean} visible - The new visibility.\n    ###\n    setVisible: (visible) ->\n        return if @object.visible == visible\n        @object.visible = visible\n        for domain in @domains\n            subObjects = @object.subObjectsByDomain[domain]\n            @prev_visibilities_[domain] ||= []\n            prev_visibilities = @prev_visibilities_[domain]\n            if subObjects then for subObject, i in subObjects\n                if subObject\n                    prev_visibilities[i] = subObject.visible if !visible\n                    subObject.visible = visible\n                    subObject.visible = prev_visibilities[i] if visible\n                    subObject.update()\n                \n    ###*\n    * Updates all sub-objects and sorts them if necessary. It also removes\n    * disposed objects from the list of sub-objects.\n    * @method update\n    ###\n    update: ->\n        for domain in @domains\n            subObjects = @object.subObjectsByDomain[domain]\n\n            i = 0\n            while i < subObjects.length\n                subObject = subObjects[i]\n                if subObject?.active\n                    if subObject.disposed\n                        subObjects[i] = null\n                    else\n                        subObject.update()\n                i++\n                \n        return null\n                \n        \n        \ngs.Component_DomainContainer = Component_DomainContainer\n",
        "compiledContent": "var Component_DomainContainer,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nComponent_DomainContainer = (function(superClass) {\n  extend(Component_DomainContainer, superClass);\n\n\n  /**\n  * A container component allows an object to have sub-objects.\n  * @module gs\n  * @class Component_DomainContainer\n  * @memberof gs\n  * @constructor\n   */\n\n  function Component_DomainContainer(disposeBehavior) {\n    Component_DomainContainer.__super__.constructor.call(this, disposeBehavior);\n\n    /**\n    * The current domain. The default domain is an empty string. Please use\n    * <b>changeDomain</b> to change the current domain.\n    * @property domain\n    * @readOnly\n     */\n    this.domain = \"com.degica.vnm.default\";\n    this.domains = [\"com.degica.vnm.default\"];\n    this.prev_visibilities_ = {};\n  }\n\n\n  /**\n  * Changes the component and all sub-objects.\n  * @method changeDomain\n  * @param {string} domain - The domain to change to.\n   */\n\n  Component_DomainContainer.prototype.dispose = function() {\n    var domain, j, len, ref;\n    Component_DomainContainer.__super__.dispose.apply(this, arguments);\n    ref = this.domains;\n    for (j = 0, len = ref.length; j < len; j++) {\n      domain = ref[j];\n      if (domain !== this.domain) {\n        this.object.subObjects = this.object.subObjectsByDomain[domain];\n        this.object.disposeObjects();\n      }\n    }\n    return this.object.subObjects = this.object.subObjectsByDomain[this.domain];\n  };\n\n\n  /**\n  * Changes the current domain.\n  * @method changeDomain\n  * @param {string} domain - The domain to change to.\n   */\n\n  Component_DomainContainer.prototype.changeDomain = function(domain) {\n    var objects;\n    this.domain = domain;\n    objects = this.object.subObjectsByDomain[domain];\n    if (!objects) {\n      objects = this.object.subObjectsByDomain[domain] = [];\n      this.domains = Object.keys(this.object.subObjectsByDomain);\n    }\n    return this.object.subObjects = objects;\n  };\n\n\n  /**\n  * Sets the visibility of all sub objects of all domains.\n  * @method setVisible\n  * @param {boolean} visible - The new visibility.\n   */\n\n  Component_DomainContainer.prototype.setVisible = function(visible) {\n    var base, domain, i, j, len, prev_visibilities, ref, results, subObject, subObjects;\n    if (this.object.visible === visible) {\n      return;\n    }\n    this.object.visible = visible;\n    ref = this.domains;\n    results = [];\n    for (j = 0, len = ref.length; j < len; j++) {\n      domain = ref[j];\n      subObjects = this.object.subObjectsByDomain[domain];\n      (base = this.prev_visibilities_)[domain] || (base[domain] = []);\n      prev_visibilities = this.prev_visibilities_[domain];\n      if (subObjects) {\n        results.push((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (i = k = 0, len1 = subObjects.length; k < len1; i = ++k) {\n            subObject = subObjects[i];\n            if (subObject) {\n              if (!visible) {\n                prev_visibilities[i] = subObject.visible;\n              }\n              subObject.visible = visible;\n              if (visible) {\n                subObject.visible = prev_visibilities[i];\n              }\n              results1.push(subObject.update());\n            } else {\n              results1.push(void 0);\n            }\n          }\n          return results1;\n        })());\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n\n  /**\n  * Updates all sub-objects and sorts them if necessary. It also removes\n  * disposed objects from the list of sub-objects.\n  * @method update\n   */\n\n  Component_DomainContainer.prototype.update = function() {\n    var domain, i, j, len, ref, subObject, subObjects;\n    ref = this.domains;\n    for (j = 0, len = ref.length; j < len; j++) {\n      domain = ref[j];\n      subObjects = this.object.subObjectsByDomain[domain];\n      i = 0;\n      while (i < subObjects.length) {\n        subObject = subObjects[i];\n        if (subObject != null ? subObject.active : void 0) {\n          if (subObject.disposed) {\n            subObjects[i] = null;\n          } else {\n            subObject.update();\n          }\n        }\n        i++;\n      }\n    }\n    return null;\n  };\n\n  return Component_DomainContainer;\n\n})(gs.Component_Container);\n\ngs.Component_DomainContainer = Component_DomainContainer;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLElBQUEseUJBQUE7RUFBQTs7O0FBQU07Ozs7QUFDRjs7Ozs7Ozs7RUFPYSxtQ0FBQyxlQUFEO0lBQ1QsMkRBQU0sZUFBTjs7QUFFQTs7Ozs7O0lBTUEsSUFBQyxDQUFBLE1BQUQsR0FBVTtJQUNWLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyx3QkFBRDtJQUNYLElBQUMsQ0FBQSxrQkFBRCxHQUFzQjtFQVhiOzs7QUFhYjs7Ozs7O3NDQUtBLE9BQUEsR0FBUyxTQUFBO0FBQ0wsUUFBQTtJQUFBLHdEQUFBLFNBQUE7QUFFQTtBQUFBLFNBQUEscUNBQUE7O01BQ0ksSUFBRyxNQUFBLEtBQVUsSUFBQyxDQUFBLE1BQWQ7UUFDSSxJQUFDLENBQUEsTUFBTSxDQUFDLFVBQVIsR0FBcUIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxrQkFBbUIsQ0FBQSxNQUFBO1FBQ2hELElBQUMsQ0FBQSxNQUFNLENBQUMsY0FBUixDQUFBLEVBRko7O0FBREo7V0FJQSxJQUFDLENBQUEsTUFBTSxDQUFDLFVBQVIsR0FBcUIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxrQkFBbUIsQ0FBQSxJQUFDLENBQUEsTUFBRDtFQVAzQzs7O0FBU1Q7Ozs7OztzQ0FLQSxZQUFBLEdBQWMsU0FBQyxNQUFEO0FBQ1YsUUFBQTtJQUFBLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixPQUFBLEdBQVUsSUFBQyxDQUFBLE1BQU0sQ0FBQyxrQkFBbUIsQ0FBQSxNQUFBO0lBQ3JDLElBQUcsQ0FBQyxPQUFKO01BQ0ksT0FBQSxHQUFVLElBQUMsQ0FBQSxNQUFNLENBQUMsa0JBQW1CLENBQUEsTUFBQSxDQUEzQixHQUFxQztNQUMvQyxJQUFDLENBQUEsT0FBRCxHQUFXLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLE1BQU0sQ0FBQyxrQkFBcEIsRUFGZjs7V0FJQSxJQUFDLENBQUEsTUFBTSxDQUFDLFVBQVIsR0FBcUI7RUFQWDs7O0FBU2Q7Ozs7OztzQ0FLQSxVQUFBLEdBQVksU0FBQyxPQUFEO0FBQ1IsUUFBQTtJQUFBLElBQVUsSUFBQyxDQUFBLE1BQU0sQ0FBQyxPQUFSLEtBQW1CLE9BQTdCO0FBQUEsYUFBQTs7SUFDQSxJQUFDLENBQUEsTUFBTSxDQUFDLE9BQVIsR0FBa0I7QUFDbEI7QUFBQTtTQUFBLHFDQUFBOztNQUNJLFVBQUEsR0FBYSxJQUFDLENBQUEsTUFBTSxDQUFDLGtCQUFtQixDQUFBLE1BQUE7Y0FDeEMsSUFBQyxDQUFBLG1CQUFtQixDQUFBLE1BQUEsVUFBQSxDQUFBLE1BQUEsSUFBWTtNQUNoQyxpQkFBQSxHQUFvQixJQUFDLENBQUEsa0JBQW1CLENBQUEsTUFBQTtNQUN4QyxJQUFHLFVBQUg7OztBQUFtQjtlQUFBLHNEQUFBOztZQUNmLElBQUcsU0FBSDtjQUNJLElBQTRDLENBQUMsT0FBN0M7Z0JBQUEsaUJBQWtCLENBQUEsQ0FBQSxDQUFsQixHQUF1QixTQUFTLENBQUMsUUFBakM7O2NBQ0EsU0FBUyxDQUFDLE9BQVYsR0FBb0I7Y0FDcEIsSUFBNEMsT0FBNUM7Z0JBQUEsU0FBUyxDQUFDLE9BQVYsR0FBb0IsaUJBQWtCLENBQUEsQ0FBQSxFQUF0Qzs7NEJBQ0EsU0FBUyxDQUFDLE1BQVYsQ0FBQSxHQUpKO2FBQUEsTUFBQTtvQ0FBQTs7QUFEZTs7Y0FBbkI7T0FBQSxNQUFBOzZCQUFBOztBQUpKOztFQUhROzs7QUFjWjs7Ozs7O3NDQUtBLE1BQUEsR0FBUSxTQUFBO0FBQ0osUUFBQTtBQUFBO0FBQUEsU0FBQSxxQ0FBQTs7TUFDSSxVQUFBLEdBQWEsSUFBQyxDQUFBLE1BQU0sQ0FBQyxrQkFBbUIsQ0FBQSxNQUFBO01BRXhDLENBQUEsR0FBSTtBQUNKLGFBQU0sQ0FBQSxHQUFJLFVBQVUsQ0FBQyxNQUFyQjtRQUNJLFNBQUEsR0FBWSxVQUFXLENBQUEsQ0FBQTtRQUN2Qix3QkFBRyxTQUFTLENBQUUsZUFBZDtVQUNJLElBQUcsU0FBUyxDQUFDLFFBQWI7WUFDSSxVQUFXLENBQUEsQ0FBQSxDQUFYLEdBQWdCLEtBRHBCO1dBQUEsTUFBQTtZQUdJLFNBQVMsQ0FBQyxNQUFWLENBQUEsRUFISjtXQURKOztRQUtBLENBQUE7TUFQSjtBQUpKO0FBYUEsV0FBTztFQWRIOzs7O0dBekU0QixFQUFFLENBQUM7O0FBMkYzQyxFQUFFLENBQUMseUJBQUgsR0FBK0IiLCJzb3VyY2VzQ29udGVudCI6WyIjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiNcbiMgICBTY3JpcHQ6IENvbXBvbmVudF9Db250YWluZXJcbiNcbiMgICAkJENPUFlSSUdIVCQkXG4jXG4jID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmNsYXNzIENvbXBvbmVudF9Eb21haW5Db250YWluZXIgZXh0ZW5kcyBncy5Db21wb25lbnRfQ29udGFpbmVyXG4gICAgIyMjKlxuICAgICogQSBjb250YWluZXIgY29tcG9uZW50IGFsbG93cyBhbiBvYmplY3QgdG8gaGF2ZSBzdWItb2JqZWN0cy5cbiAgICAqIEBtb2R1bGUgZ3NcbiAgICAqIEBjbGFzcyBDb21wb25lbnRfRG9tYWluQ29udGFpbmVyXG4gICAgKiBAbWVtYmVyb2YgZ3NcbiAgICAqIEBjb25zdHJ1Y3RvclxuICAgICMjI1xuICAgIGNvbnN0cnVjdG9yOiAoZGlzcG9zZUJlaGF2aW9yKSAtPlxuICAgICAgICBzdXBlcihkaXNwb3NlQmVoYXZpb3IpXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogVGhlIGN1cnJlbnQgZG9tYWluLiBUaGUgZGVmYXVsdCBkb21haW4gaXMgYW4gZW1wdHkgc3RyaW5nLiBQbGVhc2UgdXNlXG4gICAgICAgICogPGI+Y2hhbmdlRG9tYWluPC9iPiB0byBjaGFuZ2UgdGhlIGN1cnJlbnQgZG9tYWluLlxuICAgICAgICAqIEBwcm9wZXJ0eSBkb21haW5cbiAgICAgICAgKiBAcmVhZE9ubHlcbiAgICAgICAgIyMjXG4gICAgICAgIEBkb21haW4gPSBcImNvbS5kZWdpY2Eudm5tLmRlZmF1bHRcIlxuICAgICAgICBAZG9tYWlucyA9IFtcImNvbS5kZWdpY2Eudm5tLmRlZmF1bHRcIl1cbiAgICAgICAgQHByZXZfdmlzaWJpbGl0aWVzXyA9IHt9XG4gICAgIFxuICAgICMjIypcbiAgICAqIENoYW5nZXMgdGhlIGNvbXBvbmVudCBhbmQgYWxsIHN1Yi1vYmplY3RzLlxuICAgICogQG1ldGhvZCBjaGFuZ2VEb21haW5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBkb21haW4gLSBUaGUgZG9tYWluIHRvIGNoYW5nZSB0by5cbiAgICAjIyMgICBcbiAgICBkaXNwb3NlOiAtPlxuICAgICAgICBzdXBlclxuICAgICAgICBcbiAgICAgICAgZm9yIGRvbWFpbiBpbiBAZG9tYWluc1xuICAgICAgICAgICAgaWYgZG9tYWluICE9IEBkb21haW5cbiAgICAgICAgICAgICAgICBAb2JqZWN0LnN1Yk9iamVjdHMgPSBAb2JqZWN0LnN1Yk9iamVjdHNCeURvbWFpbltkb21haW5dXG4gICAgICAgICAgICAgICAgQG9iamVjdC5kaXNwb3NlT2JqZWN0cygpXG4gICAgICAgIEBvYmplY3Quc3ViT2JqZWN0cyA9IEBvYmplY3Quc3ViT2JqZWN0c0J5RG9tYWluW0Bkb21haW5dXG4gICAgICAgIFxuICAgICMjIypcbiAgICAqIENoYW5nZXMgdGhlIGN1cnJlbnQgZG9tYWluLlxuICAgICogQG1ldGhvZCBjaGFuZ2VEb21haW5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBkb21haW4gLSBUaGUgZG9tYWluIHRvIGNoYW5nZSB0by5cbiAgICAjIyMgICBcbiAgICBjaGFuZ2VEb21haW46IChkb21haW4pIC0+XG4gICAgICAgIEBkb21haW4gPSBkb21haW5cbiAgICAgICAgb2JqZWN0cyA9IEBvYmplY3Quc3ViT2JqZWN0c0J5RG9tYWluW2RvbWFpbl1cbiAgICAgICAgaWYgIW9iamVjdHNcbiAgICAgICAgICAgIG9iamVjdHMgPSBAb2JqZWN0LnN1Yk9iamVjdHNCeURvbWFpbltkb21haW5dID0gW11cbiAgICAgICAgICAgIEBkb21haW5zID0gT2JqZWN0LmtleXMoQG9iamVjdC5zdWJPYmplY3RzQnlEb21haW4pXG4gICAgICAgICAgICBcbiAgICAgICAgQG9iamVjdC5zdWJPYmplY3RzID0gb2JqZWN0c1xuICAgIFxuICAgICMjIypcbiAgICAqIFNldHMgdGhlIHZpc2liaWxpdHkgb2YgYWxsIHN1YiBvYmplY3RzIG9mIGFsbCBkb21haW5zLlxuICAgICogQG1ldGhvZCBzZXRWaXNpYmxlXG4gICAgKiBAcGFyYW0ge2Jvb2xlYW59IHZpc2libGUgLSBUaGUgbmV3IHZpc2liaWxpdHkuXG4gICAgIyMjXG4gICAgc2V0VmlzaWJsZTogKHZpc2libGUpIC0+XG4gICAgICAgIHJldHVybiBpZiBAb2JqZWN0LnZpc2libGUgPT0gdmlzaWJsZVxuICAgICAgICBAb2JqZWN0LnZpc2libGUgPSB2aXNpYmxlXG4gICAgICAgIGZvciBkb21haW4gaW4gQGRvbWFpbnNcbiAgICAgICAgICAgIHN1Yk9iamVjdHMgPSBAb2JqZWN0LnN1Yk9iamVjdHNCeURvbWFpbltkb21haW5dXG4gICAgICAgICAgICBAcHJldl92aXNpYmlsaXRpZXNfW2RvbWFpbl0gfHw9IFtdXG4gICAgICAgICAgICBwcmV2X3Zpc2liaWxpdGllcyA9IEBwcmV2X3Zpc2liaWxpdGllc19bZG9tYWluXVxuICAgICAgICAgICAgaWYgc3ViT2JqZWN0cyB0aGVuIGZvciBzdWJPYmplY3QsIGkgaW4gc3ViT2JqZWN0c1xuICAgICAgICAgICAgICAgIGlmIHN1Yk9iamVjdFxuICAgICAgICAgICAgICAgICAgICBwcmV2X3Zpc2liaWxpdGllc1tpXSA9IHN1Yk9iamVjdC52aXNpYmxlIGlmICF2aXNpYmxlXG4gICAgICAgICAgICAgICAgICAgIHN1Yk9iamVjdC52aXNpYmxlID0gdmlzaWJsZVxuICAgICAgICAgICAgICAgICAgICBzdWJPYmplY3QudmlzaWJsZSA9IHByZXZfdmlzaWJpbGl0aWVzW2ldIGlmIHZpc2libGVcbiAgICAgICAgICAgICAgICAgICAgc3ViT2JqZWN0LnVwZGF0ZSgpXG4gICAgICAgICAgICAgICAgXG4gICAgIyMjKlxuICAgICogVXBkYXRlcyBhbGwgc3ViLW9iamVjdHMgYW5kIHNvcnRzIHRoZW0gaWYgbmVjZXNzYXJ5LiBJdCBhbHNvIHJlbW92ZXNcbiAgICAqIGRpc3Bvc2VkIG9iamVjdHMgZnJvbSB0aGUgbGlzdCBvZiBzdWItb2JqZWN0cy5cbiAgICAqIEBtZXRob2QgdXBkYXRlXG4gICAgIyMjXG4gICAgdXBkYXRlOiAtPlxuICAgICAgICBmb3IgZG9tYWluIGluIEBkb21haW5zXG4gICAgICAgICAgICBzdWJPYmplY3RzID0gQG9iamVjdC5zdWJPYmplY3RzQnlEb21haW5bZG9tYWluXVxuXG4gICAgICAgICAgICBpID0gMFxuICAgICAgICAgICAgd2hpbGUgaSA8IHN1Yk9iamVjdHMubGVuZ3RoXG4gICAgICAgICAgICAgICAgc3ViT2JqZWN0ID0gc3ViT2JqZWN0c1tpXVxuICAgICAgICAgICAgICAgIGlmIHN1Yk9iamVjdD8uYWN0aXZlXG4gICAgICAgICAgICAgICAgICAgIGlmIHN1Yk9iamVjdC5kaXNwb3NlZFxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViT2JqZWN0c1tpXSA9IG51bGxcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViT2JqZWN0LnVwZGF0ZSgpXG4gICAgICAgICAgICAgICAgaSsrXG4gICAgICAgICAgICAgICAgXG4gICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbmdzLkNvbXBvbmVudF9Eb21haW5Db250YWluZXIgPSBDb21wb25lbnRfRG9tYWluQ29udGFpbmVyXG4iXX0=\n//# sourceURL=Component_DomainContainer_45.js"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}