{
    "uid": "07DDA1D1419141A5",
    "isLoaded": true,
    "lastModificationTime": 1428415343746,
    "items": {
        "name": "Format Helpers",
        "type": "script",
        "parentId": "DB2D3154KEE4EA43BCSBC59ED3B462A07998",
        "order": 1,
        "content": ""
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}