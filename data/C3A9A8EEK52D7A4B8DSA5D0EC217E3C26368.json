{
    "uid": "C3A9A8EEK52D7A4B8DSA5D0EC217E3C26368",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Object_Visual",
        "type": "game_script",
        "order": 1,
        "parentId": "A05E7029K45DBA459BSADF4EEC07A526241A",
        "folder": false,
        "content": "# ===================================================================\n#\n#   Script: Object_Visual\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Object_Visual extends gs.Object_Base\n\n    ###*\n    * Indiciates if the game object is visible on screen. If the parent viewport\n    * is invisible, it will be false.\n    * @property visible\n    * @type boolean\n    ###\n    #@accessors \"visible\", \n    #    set: (visible) -> @visible_ = visible\n    #    get: -> @visible_ && @viewport.visible\n        \n    ###*\n    * The base class for all regular visual game objects. \n    *\n    * @module \n    * @class Object_Visual\n    * @extends gs.Object_Base\n    * @memberof vn\n    * @constructor\n    ###\n    constructor: (data) ->\n        super()\n        \n        ###*\n        * Indiciates if the game object is visible on screen.\n        * @property visible\n        * @type boolean\n        ###\n        @visible = yes\n        \n        \n        \n        ###*\n        * The object's destination rectangle on screen.\n        * @property dstRect\n        * @type gs.Rect\n        ###\n        @dstRect = new Rect(data?.x, data?.y)\n        \n        ###*\n        * The object's origin.\n        * @property origin\n        * @type gs.Point\n        ###\n        @origin = new gs.Point(0, 0)\n        \n        ###*\n        * The object's offset.\n        * @property offset\n        * @type gs.Point\n        ###\n        @offset = new gs.Point(0, 0)\n        \n        ###*\n        * The object's anchor-point. For example: An anchor-point with 0,0 places the object with its top-left corner\n        * at its position but with an 0.5, 0.5 anchor-point the object is placed with its center. An anchor-point of 1,1\n        * places the object with its lower-right corner.\n        * @property anchor\n        * @type gs.Point\n        ###\n        @anchor = new gs.Point(0.0, 0.0)\n        \n        ###*\n        * The position anchor point. For example: An anchor-point with 0,0 places the object with its top-left corner\n        * at its position but with an 0.5, 0.5 anchor-point the object will be placed with its center. An anchor-point of 1,1\n        * will place the object with its lower-right corner. It has not effect on the object's rotation/zoom anchor. For that, take\n        * a look at <b>anchor</b> property.\n        *\n        * @property positionAnchor\n        * @type gs.Point\n        ###\n        @positionAnchor = new gs.Point(0, 0)\n        \n        ###*\n        * The object's zoom-setting for x and y axis. The default value is\n        * { x: 1.0, y: 1.0 }\n        * @property zoom\n        * @type gs.Point\n        ###\n        @zoom = data?.zoom || new gs.Point(1.0, 1.0)\n        \n        ###*\n        * The object's z-index controls rendering-order/image-overlapping. An object with a smaller z-index is rendered\n        * before an object with a larger index. For example: To make sure a game object is always on top of the screen, it\n        * should have the largest z-index of all game objects.\n        * @property zIndex\n        * @type number\n        ###\n        @zIndex = 700\n        \n        ###*\n        * The object's blend mode controls how the blending of the object's visual representation is calculated.\n        * @property blendMode\n        * @type number\n        * @default gs.BlendMode.NORMAL\n        ###\n        @blendMode = gs.BlendMode.NORMAL\n        \n        ###*\n        * The object's viewport.\n        * @property viewport\n        * @type gs.Viewport\n        ###\n        @viewport = Graphics.viewport\n    \n        ###*\n        * The object's motion-blur settings.\n        * @property motionBlur\n        * @type gs.MotionBlur\n        ###\n        @motionBlur = new gs.MotionBlur()\n        \n        ###*\n        * Contains different kinds of shader effects which can be activated for the object.\n        * @property effects\n        * @type gs.EffectCollection\n        ###\n        @effects = new gs.EffectCollection()\n        \n        ###*\n        * The object's opacity to control transparency. For example: 0 = Transparent, 255 = Opaque, 128 = Semi-Transparent.\n        * @property opacity\n        * @type number\n        ###\n        @opacity = 255\n        \n    ###*\n    * Restores the game object from a data-bundle.\n    *\n    * @method restore\n    * @param {Object} data - The data-bundle.\n    ###    \n    restore: (data) ->\n        if data.components\n            @componentsFromDataBundle(data)\n            \n        Object.mixin(this, data)\n        \n        @dstRect = gs.Rect.fromObject(data.dstRect)\n        @motionBlur = gs.MotionBlur.fromObject(data.motionBlur)\n        \ngs.Object_Visual = Object_Visual",
        "compiledContent": "var Object_Visual,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nObject_Visual = (function(superClass) {\n  extend(Object_Visual, superClass);\n\n\n  /**\n  * Indiciates if the game object is visible on screen. If the parent viewport\n  * is invisible, it will be false.\n  * @property visible\n  * @type boolean\n   */\n\n\n  /**\n  * The base class for all regular visual game objects. \n  *\n  * @module \n  * @class Object_Visual\n  * @extends gs.Object_Base\n  * @memberof vn\n  * @constructor\n   */\n\n  function Object_Visual(data) {\n    Object_Visual.__super__.constructor.call(this);\n\n    /**\n    * Indiciates if the game object is visible on screen.\n    * @property visible\n    * @type boolean\n     */\n    this.visible = true;\n\n    /**\n    * The object's destination rectangle on screen.\n    * @property dstRect\n    * @type gs.Rect\n     */\n    this.dstRect = new Rect(data != null ? data.x : void 0, data != null ? data.y : void 0);\n\n    /**\n    * The object's origin.\n    * @property origin\n    * @type gs.Point\n     */\n    this.origin = new gs.Point(0, 0);\n\n    /**\n    * The object's offset.\n    * @property offset\n    * @type gs.Point\n     */\n    this.offset = new gs.Point(0, 0);\n\n    /**\n    * The object's anchor-point. For example: An anchor-point with 0,0 places the object with its top-left corner\n    * at its position but with an 0.5, 0.5 anchor-point the object is placed with its center. An anchor-point of 1,1\n    * places the object with its lower-right corner.\n    * @property anchor\n    * @type gs.Point\n     */\n    this.anchor = new gs.Point(0.0, 0.0);\n\n    /**\n    * The position anchor point. For example: An anchor-point with 0,0 places the object with its top-left corner\n    * at its position but with an 0.5, 0.5 anchor-point the object will be placed with its center. An anchor-point of 1,1\n    * will place the object with its lower-right corner. It has not effect on the object's rotation/zoom anchor. For that, take\n    * a look at <b>anchor</b> property.\n    *\n    * @property positionAnchor\n    * @type gs.Point\n     */\n    this.positionAnchor = new gs.Point(0, 0);\n\n    /**\n    * The object's zoom-setting for x and y axis. The default value is\n    * { x: 1.0, y: 1.0 }\n    * @property zoom\n    * @type gs.Point\n     */\n    this.zoom = (data != null ? data.zoom : void 0) || new gs.Point(1.0, 1.0);\n\n    /**\n    * The object's z-index controls rendering-order/image-overlapping. An object with a smaller z-index is rendered\n    * before an object with a larger index. For example: To make sure a game object is always on top of the screen, it\n    * should have the largest z-index of all game objects.\n    * @property zIndex\n    * @type number\n     */\n    this.zIndex = 700;\n\n    /**\n    * The object's blend mode controls how the blending of the object's visual representation is calculated.\n    * @property blendMode\n    * @type number\n    * @default gs.BlendMode.NORMAL\n     */\n    this.blendMode = gs.BlendMode.NORMAL;\n\n    /**\n    * The object's viewport.\n    * @property viewport\n    * @type gs.Viewport\n     */\n    this.viewport = Graphics.viewport;\n\n    /**\n    * The object's motion-blur settings.\n    * @property motionBlur\n    * @type gs.MotionBlur\n     */\n    this.motionBlur = new gs.MotionBlur();\n\n    /**\n    * Contains different kinds of shader effects which can be activated for the object.\n    * @property effects\n    * @type gs.EffectCollection\n     */\n    this.effects = new gs.EffectCollection();\n\n    /**\n    * The object's opacity to control transparency. For example: 0 = Transparent, 255 = Opaque, 128 = Semi-Transparent.\n    * @property opacity\n    * @type number\n     */\n    this.opacity = 255;\n  }\n\n\n  /**\n  * Restores the game object from a data-bundle.\n  *\n  * @method restore\n  * @param {Object} data - The data-bundle.\n   */\n\n  Object_Visual.prototype.restore = function(data) {\n    if (data.components) {\n      this.componentsFromDataBundle(data);\n    }\n    Object.mixin(this, data);\n    this.dstRect = gs.Rect.fromObject(data.dstRect);\n    return this.motionBlur = gs.MotionBlur.fromObject(data.motionBlur);\n  };\n\n  return Object_Visual;\n\n})(gs.Object_Base);\n\ngs.Object_Visual = Object_Visual;\n\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=Object_Visual_28.js"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}